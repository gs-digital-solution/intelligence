# Generated by Django 5.2.4 on 2025-07-05 10:50

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['sous_systeme', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='Investisseur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('telephone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('pourcentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('date_investissement', models.DateField()),
                ('date_cloture', models.DateField(blank=True, null=True)),
                ('mot_de_passe', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Pays',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telephone', models.CharField(blank=True, max_length=20)),
                ('type_compte', models.CharField(choices=[('ELEVE', 'Élève'), ('ENSEIGNANT', 'Enseignant')], max_length=12)),
                ('statut_abonnement', models.BooleanField(default=False)),
                ('gmail', models.EmailField(blank=True, max_length=254)),
                ('groups', models.ManyToManyField(blank=True, help_text='Groupes auxquels appartient cet utilisateur.', related_name='utilisateurs', related_query_name='utilisateur', to='auth.group', verbose_name='groupes')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permissions spécifiques pour cet utilisateur.', related_name='utilisateurs', related_query_name='utilisateur', to='auth.permission', verbose_name='permissions utilisateur')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Matiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10)),
                ('classes', models.ManyToManyField(to='core.classe')),
            ],
        ),
        migrations.CreateModel(
            name='Lecon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('contenu_latex', models.TextField()),
                ('fichier_pdf', models.FileField(upload_to='lecons/pdf/')),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.classe')),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.matiere')),
            ],
            options={
                'verbose_name': 'Leçon',
                'verbose_name_plural': 'Leçons',
                'unique_together': {('matiere', 'classe', 'titre')},
            },
        ),
        migrations.CreateModel(
            name='SousSystemeEnseignement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_systeme', models.CharField(choices=[('PRIMAIRE_FR', 'Primaire francophone'), ('PRIMAIRE_EN', 'Primaire anglophone'), ('SECONDAIRE_FR', 'Secondaire francophone'), ('SECONDAIRE_EN', 'Secondaire anglophone'), ('SUPERIEUR', 'Enseignement supérieur')], max_length=13)),
                ('nom', models.CharField(max_length=50)),
                ('pays', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.pays')),
            ],
            options={
                'verbose_name': 'Sous-système éducatif',
                'verbose_name_plural': 'Sous-systèmes éducatifs',
                'unique_together': {('pays', 'type_systeme', 'nom')},
            },
        ),
        migrations.AddField(
            model_name='classe',
            name='sous_systeme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.soussystemeenseignement'),
        ),
        migrations.CreateModel(
            name='TypeExercice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.matiere')),
            ],
            options={
                'verbose_name': "Type d'exercice",
                'verbose_name_plural': "Types d'exercices",
                'unique_together': {('matiere', 'nom')},
            },
        ),
        migrations.CreateModel(
            name='Exercice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('difficulte', models.CharField(choices=[('FACILE', 'Facile'), ('MOYEN', 'Moyen'), ('DIFFICILE', 'Difficile')], max_length=10)),
                ('enonce_latex', models.TextField()),
                ('corrige_latex', models.TextField()),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('lecons', models.ManyToManyField(to='core.lecon')),
                ('type_exercice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.typeexercice')),
            ],
            options={
                'verbose_name': 'Exercice',
                'verbose_name_plural': 'Exercices',
            },
        ),
        migrations.AlterUniqueTogether(
            name='classe',
            unique_together={('sous_systeme', 'nom')},
        ),
    ]
